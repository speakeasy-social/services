// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../src/generated/prisma-client"
  // previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("SERVICE_ADMIN_DATABASE_URL")
  // extensions = [uuidOssp(map: "uuid-ossp")]
}

model InviteCode {
  id            String   @id @default(uuid()) @db.Uuid
  code          String   @unique
  totalUses     Int      @default(1)
  remainingUses Int      @default(1)
  key           String
  value         String   @default("true")
  createdAt     DateTime @default(now())
  updatedAt     DateTime?

  // Relationships
  uses     InviteCodeUse[]

  @@map("invite_codes")
}

model InviteCodeUse {
  id             String   @id @default(uuid()) @db.Uuid
  inviteCodeId   String   @db.Uuid
  userFeatureId  String   @db.Uuid
  createdAt      DateTime @default(now())

  // Relationships
  inviteCode InviteCode    @relation(fields: [inviteCodeId], references: [id])
  feature    UserFeature   @relation(fields: [userFeatureId], references: [id])

  @@unique([inviteCodeId, userFeatureId])
  @@map("invite_code_uses")
}

model UserFeature {
  id        String   @id @default(uuid()) @db.Uuid
  userDid   String
  key       String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime?

  // Relationships
  inviteCodeUse InviteCodeUse[]

  @@index([userDid, key], name: "idx_user_did_key_index")
  @@map("user_features")
}

model Testimonial {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  // id        String   @id @db.Uuid
  userDid   String   @db.Uuid
  message   String
  createdAt DateTime @default(now())

  @@index([userDid], name: "idx_testimonial_user_did")
  @@map("testimonials")
}

// Generates a broken ER diagram, see README.md if you
// need to update the diagram
// generator erd {
//  provider = "prisma-erd-generator"
// }
