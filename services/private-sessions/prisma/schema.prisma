// This is your Prisma schema file for the private-sessions service

generator client {
  provider = "prisma-client-js"
  output = "../src/generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("PRIVATE_SESSIONS_DATABASE_URL")
}

model Session {
  id                String    @id @default(uuid()) @db.Uuid
  authorDid         String
  createdAt         DateTime  @default(now()) 
  expiresAt         DateTime
  revokedAt         DateTime?

  // Relationships
  sessionKeys       SessionKey[] @relation("SessionToSessionKeys")
  posts             EncryptedPost[] @relation("SessionToPosts")

  @@index([authorDid, createdAt(sort: Desc)], name: "idx_sessions_current")
  @@map("sessions")
}

model SessionKey {
  sessionId    String @db.Uuid
  userKeyPairId String @db.Uuid
  recipientDid String
  encryptedDek Bytes
  createdAt    DateTime  @default(now()) 

  // Relationships
  session     Session @relation("SessionToSessionKeys", fields: [sessionId], references: [id])

  @@id([sessionId, recipientDid])
  @@index([recipientDid, sessionId], name: "idx_session_keys_by_recipient")
  @@index([sessionId, recipientDid], name: "idx_session_keys_with_session")
  @@map("session_keys")
}

model EncryptedPost {
  id            String   @id @default(uuid()) @db.Uuid
  uri           String
  rkey          String
  sessionId     String   @db.Uuid
  authorDid     String
  langs         String[]
  replyRootUri  String?
  replyUri      String?
  encryptedContent Bytes
  createdAt     DateTime @default(now())

  // Relationships
  session       Session  @relation("SessionToPosts", fields: [sessionId], references: [id])

  @@index([authorDid, createdAt(sort: Desc)], name: "idx_posts_by_author_created")
  @@index([sessionId, createdAt(sort: Desc), authorDid], name: "idx_posts_by_session_created_author")
  @@index([uri], name: "idx_posts_by_uri")
  @@index([replyRootUri, sessionId], name: "idx_posts_by_reply_root")
  @@index([replyUri, sessionId], name: "idx_posts_by_reply_parent")
  @@map("encrypted_posts")
}

model UserFeature {
  id           String    @id @default(uuid()) @db.Uuid
  userDid      String
  key          String
  value        String
  createdAt    DateTime  @default(now()) 
  updatedAt    DateTime

  @@index([userDid, key], name: "idx_user_did_key_index")
  @@map("user_features")
}

// Generates a broken ER diagram, see README.md if you
// need to update the diagram
// generator erd {
//  provider = "prisma-erd-generator"
// }