name: Verify Build

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: speakeasy
          POSTGRES_PASSWORD: speakeasy
          POSTGRES_DB: speakeasy
        ports:
          - 5496:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      localstack:
        image: localstack/localstack:latest
        env:
          SERVICES: s3
          DEBUG: 1
          AWS_ACCESS_KEY_ID: s3_test_key
          AWS_SECRET_ACCESS_KEY: s3_test_secret
          DEFAULT_REGION: us-east-1
        ports:
          - 4566:4566

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # - name: Get pnpm store directory
      #   shell: bash
      #   run: |
      #     echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # - uses: actions/cache@v3
      #   name: Setup pnpm cache
      #   with:
      #     path: ${{ env.STORE_PATH }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-

      # - uses: actions/cache@v3
      #   name: Setup node_modules cache
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup environment files
        run: pnpm dev:setup:env

      - name: Setup database schemas
        run: NODE_ENV=test pnpm dev:setup:db

      - name: Run database migrations
        run: NODE_ENV=test pnpm dev:setup:migrations

      - name: Initialize S3
        run: pnpm dev:setup:s3

      - name: Setup pgboss
        run: cd packages/queue && NODE_ENV=test pnpm setup:pgboss

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test
