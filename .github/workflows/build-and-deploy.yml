name: build-and-deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/deploy

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "version=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          file: ./Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=${{ github.workspace }}/speakeasy-services.tar
          build-args: |
            EXPO_PUBLIC_BUNDLE_IDENTIFIER=${{ steps.vars.outputs.sha_short }}
          tags: speakeasy-services-image:${{ steps.vars.outputs.version }}

      - name: Gzip Docker Image
        run: |
          gzip -c ${{ github.workspace }}/speakeasy-services.tar > ${{ github.workspace }}/speakeasy-services.tar.gz

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: speakeasy-services-tar-gz
          path: ${{ github.workspace }}/speakeasy-services.tar.gz

  push-to-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        environment: [production, keys-production]

    environment: ${{ matrix.environment }}

    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: speakeasy-services-tar-gz
          path: ${{ github.workspace }}

      - name: Copy Docker Image to UpCloud Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: ${{ github.workspace }}/speakeasy-services.tar.gz
          target: /home/speakeasy

      - name: Load Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            TAR_GZ="/home/speakeasy/speakeasy-services.tar.gz"
            TAR="/home/speakeasy/speakeasy-services.tar"

            gunzip -c ${TAR_GZ} > ${TAR}
            docker load < ${TAR}
            rm -f ${TAR}

  deploy-private-sessions:
    runs-on: ubuntu-latest
    needs: push-to-production
    environment: production
    #    if: github.ref == 'refs/heads/main' && (contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.modified, 'services/private-sessions/'))

    steps:
      - name: Run Database Migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            docker run --rm \
              -e PRIVATE_SESSIONS_DATABASE_URL="${{ secrets.PRIVATE_SESSIONS_MIGRATION_DATABASE_URL }}" \
              speakeasy-services-image:${{ needs.build.outputs.version }} \
              pnpm --filter @speakeasy-services/private-sessions prisma:migrate

      - name: Deploy Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            docker-compose -f /home/speakeasy/app/docker-compose.yml up -d private-sessions

  deploy-trusted-users:
    runs-on: ubuntu-latest
    needs: push-to-production
    environment: production
    #    if: github.ref == 'refs/heads/main' && (contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.modified, 'services/trusted-users/'))

    steps:
      - name: Run Database Migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            docker run --rm \
              -e TRUSTED_USERS_DATABASE_URL="${{ secrets.TRUSTED_USERS_MIGRATION_DATABASE_URL }}" \
              speakeasy-services-image:${{ needs.build.outputs.version }} \
              pnpm --filter @speakeasy-services/trusted-users prisma:migrate

      - name: Deploy Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            docker-compose -f /home/speakeasy/app/docker-compose.yml up -d trusted-users

  deploy-user-keys:
    runs-on: ubuntu-latest
    needs: push-to-production
    environment: keys-production
    #    if: github.ref == 'refs/heads/main' && (contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.modified, 'services/user-keys/'))

    steps:
      - name: Load Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            SERVICE="user-keys"
            TAR_GZ="/home/speakeasy/speakeasy-services.tar.gz"
            TAR="/home/speakeasy/speakeasy-services-${SERVICE}.tar"

            gunzip -c ${TAR_GZ} > ${TAR}
            docker load < ${TAR}
            rm -f ${TAR}

      - name: Run Database Migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            docker run --rm \
              -e USER_KEYS_DATABASE_URL="${{ secrets.USER_KEYS_MIGRATION_DATABASE_URL }}" \
              speakeasy-services-image:${{ needs.build.outputs.version }} \
              pnpm --filter @speakeasy-services/user-keys prisma:migrate

      - name: Deploy Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            docker-compose -f /home/speakeasy/app/docker-compose.yml up -d user-keys
