version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: speakeasy-services-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-speakeasy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-speakeasy}
      POSTGRES_DB: ${DB_NAME:-speakeasy}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-speakeasy}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - speakeasy-services

  postgres-test:
    image: postgres:15-alpine
    container_name: speakeasy-services-postgres-test
    environment:
      POSTGRES_USER: ${DB_USER:-speakeasy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-speakeasy}
      POSTGRES_DB: ${DB_NAME_TEST:-speakeasy_test}
    ports:
      - '${DB_PORT_TEST:-5433}:5432'
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./scripts/init-db-test.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-speakeasy}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - speakeasy-services

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - '4566:4566' # LocalStack Gateway (all services)
    environment:
      - SERVICES=s3
      - DEBUG=1
      - AWS_ACCESS_KEY_ID=s3_test_key
      - AWS_SECRET_ACCESS_KEY=s3_test_secret
      - DEFAULT_REGION=us-east-1
    volumes:
      - ./dev-uploads:/tmp/localstack-s3-storage
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  speakeasy-services:
    name: speakeasy-services

volumes:
  postgres_data:
  postgres_test_data:
